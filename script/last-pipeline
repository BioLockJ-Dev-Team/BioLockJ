#!/bin/bash

## This script returns the path to the most recent pipeline

## Ideal for:
## cd $(last-pipeline)
## ls `last-pipeline`

#. $BLJ/script/blj_functions 

if [ ${#BLJ_PROJ} -eq 0 ]; then
	echo "Error - BLJ_PROJ is not defined." >&2
	exit 1
fi

if [ ! -d "${BLJ_PROJ}" ]; then
	echo "Error - Cannot find directory BLJ_PROJ: ${BLJ_PROJ}" >&2
	exit 1
fi

IFS_CACHE="$IFS"

most_recent_pipeline() {
	if [ -d "${BLJ_PROJ}" ]; then
		local contents=$(ls ${BLJ_PROJ})
		if [ ${#contents} -eq 0 ]; then
			echo "none"; return
		fi
		IFS=$'\n'
		dirs=$(\ls -1dt ${BLJ_PROJ}/*) && myDirs=( "$dirs" )
		for dir in $myDirs; do
			$(is_pipeline_dir $dir) && export IFS="$IFS_CACHE" && echo "$dir" && return
		done
	fi
	export IFS="$IFS_CACHE"
}


# Default value --> $' \t\n'
show_IFS() {
	echo "Cached  IFS  -->  $(printf %q "$IFS_CACHE")"
	echo "Current IFS  -->  $(printf %q "$IFS")"
}

# Trim last input $1 character if ends with "/"
# Return 0 status code if $1 param ends with patthern _yyyymmmdd.
# Example: myTestPipeline_2019Jan01 returns TRUE
is_pipeline_dir() {
	dir=$1 && [ "${dir: -1}" == "/" ] && dir=${dir:0:$((${#dir}-1))}
	prefix=${dir: -10:1}
	year=$(echo ${dir: -9:4} | egrep "^[0-9{4}]+$")
	mon1=$(echo ${dir: -5:1} | egrep "^[A-S]+$")
	mon23=$(echo ${dir: -4:2} | egrep "^[a-y{2}]+$")
	day=$(echo ${dir: -2} | egrep "^[0-9{2}]+$")
	[ "$dir" == "${dir/.}" ] && [ -d "$1" ] && [ "$prefix" == "_" ] && [ ${#year} -eq 4 ] && [ ${#mon1} -eq 1 ] && [ ${#mon23} -eq 2 ] && [ ${#day} -eq 2 ]
}



pipeline=$(most_recent_pipeline)

if [ ${#pipeline} -eq 0 ] || [ ${pipeline} == "none" ]; then
	echo "No pipelines found in BLJ_PROJ: ${BLJ_PROJ}" >&2
	exit 1
fi

# the only thing printed to stdout
echo "${pipeline}"
