#!/bin/bash
###############################
## This is the biolock api interface.
## It calls the BiolockjAPI class.
###############################

main(){
	MAIN_CLASS="biolockj.api.BioLockJ_API"
	check_env_vars
	
	# Before anything else, check to see if the user just wants help or version info.
	[ $# -eq 0 ] && display_help && exit 0
	
	[ ${#BIOLOCKJ_TEST_MODE} -gt 0 ] && printf "\n ---------> Execute CMD [  biolockj_api $(echo ${@})  ]\n"
	
	findMoreModsDir $@ # define EXTRA
	
	CMD="$(java_cmd_core) $(echo ${@})"
	continue_after_command $CMD
	
	statusCode=$?
    if [ ${statusCode} -ne 0 ]; then
    	display_help
    fi
}

. ${BLJ_SCRIPT}/blj_functions
. ${BLJ_SCRIPT}/blj_user_arg_lib # note that several functions are over-written

# Make sure required variables exist and are valid
check_env_vars(){
	pls_use_install="\nThe install script packaged with BioLockJ sets this value. You may need to start a new terminal window.\n"
	[ ${#BLJ_PROJ} -eq 0 ] && exit_with_message "Error [ biolockj_api ]: Required env variable BLJ_PROJ is not defined. $pls_use_install"
	[ ! -d "${BLJ_PROJ}" ] && exit_with_message "Error [ biolockj_api ]: Required env variable BLJ_PROJ [\"${BLJ_PROJ}\"] must be a directory on the filesystem. $pls_use_install"
	[ ${#BLJ} -eq 0 ] && exit_with_message "Error [ biolockj_api ]: Required env variable BLJ is not defined. $pls_use_install"
	[ ! -d "${BLJ}" ] && exit_with_message "Error [ biolockj_api ]: Required env variable BLJ [\"${BLJ}\"] must be a directory on the filesystem. $pls_use_install"
	BLJ_JAR=${BLJ}/dist/BioLockJ.jar
	[ ! -f "${BLJ_JAR}" ] && exit_script "Error [ biolockj_api ]: BioLockJ Jar file \"${BLJ_JAR}\" not found."
}

java_cmd_core(){
	if [ ${#EXTRA} -gt 0 ]; then
		echo "java -cp ${BLJ_JAR}:${EXTRA}/* $MAIN_CLASS"
	else	
		echo "java -cp ${BLJ_JAR} $MAIN_CLASS"
	fi
}

findMoreModsDir(){
	local QUERY=$1
	if [ $QUERY == "listModules" ] \
		|| [ $QUERY == "listApiModules" ] \
		|| [ $QUERY == "listAllProps" ] \
		|| [ $QUERY == "moduleInfo" ] \
		&& [ $# -eq 2 ]; 
		then
		EXTRA="$2"
	elif [ $QUERY == "propType" ] \
		|| [ $QUERY == "describeProp" ] && [ $# -eq 4 ]; then
		EXTRA="$4"
	elif [ $QUERY == "isValidProp" ] && [ $# -gt 3 ]; then
		local args=( "$@" )
		local numArgs=${#args[@]}
		local lastArg=${args[$numArgs-1]}
		if [ -d $lastArg ]; then
			EXTRA="$lastArg"
		fi
	fi
	if [ ! -d $EXTRA ]; then
		echo "If an extra modules directory is supplied, it must be a valid direcotry.  Found: $EXTRA" >&2
		exit 1
	fi
}

function display_help(){ #this over-rides the function definition found in blj_user_arg_lib
	CMD="java -cp ${BLJ_JAR} ${MAIN_CLASS} help"
	continue_after_command $CMD     
	statusCode=$?
    if [ ${statusCode} -ne 0 ]; then
    	display_help_without_java
    fi
}

display_help_without_java(){
	echo ""
	echo "BioLockJ API $(display_version) - UNCC Fodor Lab" 
	echo ""
	echo "Requires java (version 1.8 or higher)"
	echo "Current java version:"
	eval "java -version"
	echo ""
	echo "Requries BioLockJ (version 1.2.6 or higher)"
	echo "Current jar file version:"
	eval "java -jar $BLJ/dist/BioLockJ.jar --version"
	echo ""
	echo "Usage:"
	echo "biolockj_api <querry> [args...]"
	echo ""
	echo "Use biolockj_api without args to get help menu."
	echo ""
}

main $@
