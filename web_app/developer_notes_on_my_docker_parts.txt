My container will:
  save file to Host
  launch manager



//from dockblj :
		docker run --name blj_gui \
			-p 5999:5999 \ #unique ports for my docker container
			-e BLJ_PROJ \  #this will be the same everytime
      -e "BLJ_INPUT=$1" \
      -e "BLJ_CONFIG=$2" \
      -e "BLJ_META=$3" \
			-v /var/run/docker.sock:/var/run/docker.sock \#this is the socket to maps to the host, giving us the abitiy
			-v $BLJ_PROJ:/pipeline:ro \# ro means read only
			-v $1:/input \
			amyerke/node-web-app  #this is the name of my docker image

//to run Mike's BLJ
docker run --name blj \
	-p 6000:6000 \
	-e BLJ_PROJ \
	-e "BLJ_INPUT=$1" \
	-e "BLJ_CONFIG=$2" \
	-e "BLJ_META=$3" \
	-v /var/run/docker.sock:/var/run/docker.sock \
	-v $BLJ_PROJ:/pipeline:delegated \
	-v $1:/input \
	biolockj/manager

my docker will have to run java and blj like Mike's manager
  blj_gui will NOT run mike's manager command #6, which deletes the container

  my #6 will have a -launchGui command


I need the first 5 of these: /Users/aaronyerke/Desktop/fodor_lab/BioLockJ-master/resources/docker


# Deployment path: $BLJ/resources/docker/Dockerfile

FROM ubuntu:18.04

#1.) ================= Setup Env =================
ENV BLJ=/app/biolockj_v1.0
ENV PATH=$PATH:$BLJ/dist
ARG DEBIAN_FRONTEND=noninteractive
RUN mkdir /input && mkdir /pipeline && mkdir /app && mkdir $BLJ

#2.) ============ Install Ubuntu Prereqs =================
RUN apt-get update && \
	apt-get install -y build-essential \
	checkinstall \
	apt-utils \
	software-properties-common \
	git \
	unzip \
	ca-certificates \
	tar \
	wget \
	gzip \
	nano

#2.1) ============ Update Ubuntu ~/.bashrc =================
RUN echo ' '  >> ~/.bashrc
RUN echo 'force_color_prompt=yes' >> ~/.bashrc
RUN echo 'alias ..="cd .."' >> ~/.bashrc
RUN echo 'alias ls="ls -lh --color=auto"' >> ~/.bashrc
RUN echo 'alias h="head -n 8"' >> ~/.bashrc
RUN echo 'alias t="tail -n 8"' >> ~/.bashrc
RUN echo 'alias f="find . -name"' >> ~/.bashrc
RUN echo 'alias vib="nano ~/.bashrc"' >> ~/.bashrc
RUN echo 'alias cab="cat ~/.bashrc"' >> ~/.bashrc
RUN echo 'alias tlog="tail -1000f *.log"' >> ~/.bashrc
RUN echo 'alias rf="source ~/.bashrc"' >> ~/.bashrc
RUN echo ' ' >> ~/.bashrc
RUN echo 'if [ -f /etc/bash_completion ] && ! shopt -oq posix; then' >> ~/.bashrc
RUN echo '    . /etc/bash_completion' >> ~/.bashrc
RUN echo 'fi' >> ~/.bashrc

#3.) ============ Install  Docker Client =================
ARG DOCKER_CLIENT="docker-18.06.0-ce.tgz"
RUN cd /tmp && mkdir -p /usr/local/bin && \
	wget https://download.docker.com/linux/static/stable/x86_64/${DOCKER_CLIENT} && \
	tar --strip-components=1 -zxf ${DOCKER_CLIENT} -C /usr/local/bin && \
	chmod +x /usr/local/bin/docker && \
	rm -f /tmp/$DOCKER_CLIENT

#4.) ================= Install Java   =================
RUN apt-get update && \
   apt-get upgrade -y && \
   apt-get install -y  software-properties-common && \
   add-apt-repository ppa:webupd8team/java -y && \
   apt-get update && \
   echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
   apt-get install -y oracle-java8-installer && \
   apt-get clean

#5.) ================= Install BioLockJ =================
ARG BLJ_VER=1
ENV BLJ_TAR=docker_biolockj_v1.0.tar.gz
ENV BLJ_RELEASE_URL="https://github.com/msioda/BioLockJ/releases/download/v1.0/$BLJ_TAR"
RUN echo $BLJ_VER && \
	cd $BLJ && \
	wget $BLJ_RELEASE_URL && \
	tar -xzf $BLJ_TAR && \
	chmod -R 777 $BLJ && \
	rm -f $BLJ/$BLJ_TAR

#6.) =================== Install Node & Express ===========
Do something...

#7.) ===================


to run my docker file:
  docker run -it -p 8080:3000 amyerke/node-web-app
    the -p maps the ports [-p host_port:container_port]
    you can find the server at localhost:8080/

//gets you into the docker
--entrypoint=/bin/bash




//run mike blj docker manager
docker run --name manager \
      -p 6000:6000 \
      -e BLJ_PROJ \
      -e "BLJ_INPUT=$1" \
      -e "BLJ_CONFIG=$2" \
      -v /var/run/docker.sock:/var/run/docker.sock \ //allows the container to think it's on host (but it's not)
      -v to_data_:path_to_data \
      -v $BLJ_PROJ:/pipeline:delegated \
      -v $1:/input \
      biolockj/manager

//build the docker from dir
docker build -t amyerke/node-web-app .

docker run --name gui -it -p 8080:3000   --rm   -v $BLJ/resources/config/gui:/config   -v /var/run/docker.sock:/var/run/docker.sock   --entrypoint=/bin/bash amyerke/node-web-app

can run blj from gui
docker run --name gui -it -p 8080:3000 --rm \
  -v $BLJ/resources/config/gui:/config  \
  -v $BLJ_PROJ:/blj_proj \
  -v /var/run/docker.sock:/var/run/docker.sock  \
  -v $BLJ:/blj --entrypoint=/bin/bash \
  amyerke/node-web-app


/blj/dist/guidock \
  /Users/aaronyerke/Desktop/fodor_lab/blj_testing/BioLockJ-master/resources/config/gui/testDocker.properties \
  /Users/aaronyerke/projects/docker_input \
  /Users/aaronyerke/projects/meta \
  testMetadata.tsv \


  /Users/aaronyerke/git/temp_blj_master/BioLockJ/dist/dockblj \
  inputDirPaths=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/test/data/multiplexed/combinedFastq/ \
  metadataFilePath=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/test/metadata \
  trimPrimersFilePath=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/test/primers \
  config=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/config/gui/testDockerRdp.properties


  /Users/aaronyerke/git/temp_blj_master/BioLockJ/dist/dockblj \
  inputDirPaths=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/test/data/multiplexed/combinedFastq \
  metadataFilePath=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/test/metadata \
  trimPrimersFilePath=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/test/primers \
  config=/Users/aaronyerke/git/temp_blj_master/BioLockJ/resources/config/gui/testDockerRdp.properties
