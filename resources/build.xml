<project name="BioLockJ" default="build-jar" basedir="..">

	<loadfile property="blj_version" srcfile=".version">
	    			<filterchain><striplinebreaks/></filterchain>
	    		</loadfile>
	
	<available file=".git" type="dir" property="git.present"/>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="lib/ant-contrib-0.6.jar"/>
		</classpath>
	</taskdef>
		
	<taskdef name="if" classname="net.sf.antcontrib.logic.IfTask" classpath="lib/ant-contrib-0.6.jar"/>
		
	<path id="lib.path">
		<fileset dir="lib"/>
	</path>
	
	<target name="clear-bin">
		<if><available file="bin"/>
			<then>
				<delete includeemptydirs="true">
			  		<fileset dir="bin" includes="**/*"/>
				</delete>
			</then>
		</if>
	</target>
	
	<target name="init" depends="clear-bin">
		<if><available file="bin"/>
			<then>
				<delete includeemptydirs="true">
			  		<fileset dir="bin" includes="**/*"/>
				</delete>
			</then>
		</if>
		<if><available file="dist/BioLockJ.jar"/>
			<then>
				<delete file="dist/BioLockJ.jar"/>
			</then>
		</if>
    	<property name="release_tar" value="dist/BioLockJ-${blj_version}.tar.gz"/>
	</target>

    <target name="compile-source" depends="init">
    	    <mkdir dir="bin" />
		<javac includeantruntime="false" debug="on" srcdir="src" destdir="bin" classpathref="lib.path"/>
    		<copy file="resources/log4j.properties" todir="bin"/>
    </target>
	
	<target name="git.revision" if="git.present">
	    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
	        <arg value="describe"/>
	    	<arg value="--tags"/>
	        <arg value="--always"/>
	    	<arg value="--long"/>
	        <arg value="HEAD"/>
	    </exec>
	</target>
	
	<target name="build-jar" depends="compile-source,git.revision">
		<jar destfile="dist/BioLockJ.jar">
			<zipgroupfileset dir="lib" includes="*.jar"/>
			<fileset dir="bin"/>
			<fileset dir="src" excludes="**.java"/>
			<manifest>
				<attribute name="Specification-Title" value="BioLockJ"/>
				<attribute name="Specification-Version" value="${blj_version}"/>
				<attribute name="Specification-Vendor" value="UNCC Fodor Lab"/>
				<attribute name="Implementation-Title" value="BioLockJ"/>
				<attribute name="Implementation-Version" value="${git.revision}"/>
				<attribute name="Implementation-Vendor" value="UNCC Fodor Lab"/>
				<attribute name="Version" value="${blj_version}"/>
				<attribute name="Main-Class" value="biolockj.launch.Launcher"/>
			</manifest>
		</jar>
	</target>

	<target name="javadoc" depends="build-jar">
		<javadoc classpathref="lib.path" access="package" author="true" destdir="javadocs" doctitle="BioLockJ" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" source="1.8" sourcepath="src" splitindex="true" use="true" version="true">
			<tag name="blj.web_desc" description="GUI Module Name" />
			<link href="https://docs.oracle.com/javase/8/docs/api/"/>
		    <link href="http://docs.oracle.com/javase/8/javafx/api/"/>
		</javadoc>
	</target>

	<target name="buildDocs" depends="build-jar">
		<delete includeemptydirs="true">
			  <fileset dir="mkdocs/user-guide/docs/GENERATED" includes="**/*"/>
		</delete>
		<exec executable="java">
			<arg value="-cp"/>
			<arg value="dist/BioLockJ.jar"/>
			<arg value="biolockj.api.BuildDocs"/>
			<arg value="mkdocs/user-guide/docs/GENERATED"/>
		</exec>
	</target>

	<target name="userguide" depends="buildDocs,javadoc">
		<exec executable="mkdocs" dir="mkdocs/user-guide">
			<arg value="build"/>
			<arg value="--site-dir"/>
			<arg value="../../docs"/>
		</exec>
		<move file="javadocs" tofile="docs/javadocs"/>
	</target>
	
	<target name="deploy" depends="userguide">
		<delete>
			<fileset dir="dist" includes="*gz"/>
		</delete>
		<if><available file="bin"/>
			<then>
				<delete includeemptydirs="true">
			  		<fileset dir="bin" includes="**/*"/>
				</delete>
			</then>
		</if>
		<tar compression="gzip" destfile="${release_tar}" longfile="gnu">
			<tarfileset dir="." filemode="770" dirmode="770" prefix="BioLockJ">
				<exclude name="/bin"/>
				<exclude name="${release_tar}"/> 
				<exclude name="*.yml"/> 
				<exclude name="*.md"/> 
				<exclude name=".DS_Store"/> 
				<exclude name=".git*"/> 
				<exclude name=".project"/> 
				<exclude name=".classpath"/> 
			</tarfileset>
		</tar>	
		<chmod file="${release_tar}" perm="770"/>	
	</target>

</project>