#!/bin/bash
###############################################################################
##                                                                           ##
##  This script manually resets current module and pipeline status.          ##
##  All modules numbered higher than the current module will also be reset.  ##
##                                                                           ##
###############################################################################

function valid_file {
	if [ "${#1}" -ne "0" ] && [ -f "$1" ]; then  
		echo "Y" 
	else 
		echo "N"
	fi
}

function valid_dir {
	if [ "${#1}" -ne "0" ] && [ -d "$1" ]; then  
		echo "Y" 
	else 
		echo "N"
	fi
}

parentDir="$(dirname $PWD)"
currentDirName="$(basename $PWD)"
maxNum=${currentDirName%_*}

modStarted=$PWD/biolockjStarted
modComplete=$PWD/biolockjComplete
pipelineComplete=$parentDir/biolockjComplete

if [ "${#maxNum}" -ne "0" ] && [ "$(valid_file $modComplete)" == "Y" ]; then

	echo "Reset BioLockJ pipeline $parentDir from step # $maxNum"
	[ "$(valid_file $pipelineComplete)" == "Y" ] && rm $pipelineComplete && echo "delete $pipelineComplete"
	[ "$(valid_file $modStarted)" != "Y" ] && touch $modStarted && echo "create $modStarted"
	rm $modComplete && echo "delete $modComplete"
	
	for pipelineDir in $parentDir/*; do
		if [ "$(valid_dir $pipelineDir)" == "Y" ]; then
			modStarted=$pipelineDir/biolockjStarted
			modComplete=$pipelineDir/biolockjComplete
			dir="$(basename $pipelineDir)"
			modNum=${dir%_*}
			if [ ${#modNum} -gt 0 ] && [ $modNum -gt $maxNum ]; then
				[ "$(valid_file $modComplete)" == "Y" ] && rm $modComplete && echo "delete $modComplete"
				[ "$(valid_file $modStarted)" != "Y" ] && touch $modStarted && echo "create $modStarted"
			fi
		fi
	done
	
else
	echo "Command (blj_reset) aborted: no completed pipelines were found." 
fi
