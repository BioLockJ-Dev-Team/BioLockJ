#!/bin/bash
############################################################################
##                                                                        ##
##  This script prints the scp command needed to download analysis.       ##
##  If the current directory is not a BioLockJ pipeline, print the        ##
##  scp command for the most recent pipeline executed.                    ##
##                                                                        ##
##  Users can copy the command and execute it from a local workstation.   ##
##                                                                        ##
############################################################################

function valid_dir {
	if [ ${#1} -gt 0 ] && [ -d "$1" ]; then  
		echo "Y" 
	else 
		echo "N"
	fi
}

function valid_file {
	if [ ${#1} -gt 0 ] && [ -f "$1" ]; then  
		echo "Y" 
	else 
		echo "N"
	fi
}

function most_recent_pipeline {
	if [ "$(valid_dir $BLJ_PROJ)" == "Y" ]; then
		dir=$( \ls -t $BLJ_PROJ | head -1 )
		if [ ${#dir} -gt 0 ] && [ "$(valid_dir $BLJ_PROJ/$dir)" == "Y" ]; then
			echo "$BLJ_PROJ/$dir"
		else
			echo ""
		fi
   fi
}

pipeline=$(most_recent_pipeline)
SUM=summary.txt
MSG=
if [ "$(valid_file $SUM)" == "Y" ]; then
	val=$(grep -B 1 "mkdir" $SUM)
	[ ${#val} -gt 0 ] && MSG="$val"
elif [ ${#pipeline} -gt 0 ]; then
	val=$(grep -B 1 "mkdir" $pipeline/$SUM)
	[ ${#val} -gt 0 ] && MSG="$val"
else
	MSG="No completed pipelines found in BLJ_PROJ: $BLJ_PROJ"
fi

if [ ${#MSG} -gt 0 ]; then
	echo "$MSG"
else
	echo "Summary missing scp command (applicable on cluster only)" 
fi